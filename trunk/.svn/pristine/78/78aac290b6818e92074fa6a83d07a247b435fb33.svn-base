<?php
namespace App\services\soma\express;

use App\services\Result;
use App\services\soma\contract\ExpressContract;
use App\libraries\Http;
use \App\libraries\Support\Log;

/**
 * Class ShunFeng
 * @package App\services\express
 * @author renshuai  <renshuai@mofly.cn>
 *
 */
class ShunFeng extends Express implements ExpressContract
{
    /**
     * 初始配置的key
     */
    const CONFIG_KEY = 'shunfeng';

    /**
     * 缓存key
     */
    const ACCESS_TOKNE_KEY = 'SF_TOKEN_KEY';

    /**
     * 申请token的调用地址
     */
    const GET_ACCESS_TOKNE_URL = 'https://open-sbox.sf-express.com/public/v1.0/security/access_token/sf_appid/%s/sf_appkey/%s';

    /**
     * 申请token类型
     */
    const GET_TOKEN_TYPE = 301;

    /**
     * 快速下单的调用地址
     */
    const CREATE_ORDER_URL = "https://open-sbox.sf-express.com/rest/v1.0/order/access_token/%s/sf_appid/%s/sf_appkey/%s";

    /**
     * 获取运单类型
     */
    const GET_MAILNO_TYPE = 203;
    /**
     * 获取运单号
     */
    const GET_MAILNO_URL = 'https://open-sbox.sf-express.com/rest/v1.0/order/query/access_token/%s/sf_appid/%s/sf_appkey/%s';

    /**
     * 快速下单类型
     */
    const CREATE_ORDER_TYPE = 200;

    /**
     * 成功调用接口的代码
     */
    const EX_CODE_OPENAPI_0200 = 'EX_CODE_OPENAPI_0200';

    /**
     * @var string $appId 顺丰appid
     */
    private $appId;

    /**
     * @var string $appKey 顺丰appKey
     */
    private $appKey;

    public function __construct()
    {
        parent::__construct();
        $this->getCI()->config->load('express');
        $this->appId = $this->getCI()->config->item(self::CONFIG_KEY)['appID'];
        $this->appKey = $this->getCI()->config->item(self::CONFIG_KEY)['appKey'];
    }
    /**
     * 获取token
     * @return Result
     * @author renshuai  <renshuai@jperation.cn>
     */
    public function getAccessToken()
    {
        $result = new Result();
        $redis = $this->getCI()->get_redis_instance();
        if (empty($redis)) {
            $result->setData([
                'status' => \Soma_base::STATUS_FALSE
            ]);
            $result->setMessage('系统错误');
            return $result;
        }

        $token = $redis->get(self::ACCESS_TOKNE_KEY);
        if (empty($token)) {
            try{
                $postData = array(
                    "head" => [
                        "transMessageId" => $this->getTranMessageId(),
                        "transType" => self::GET_TOKEN_TYPE
                    ],
                    "body" => null
                );
                $client = new Http();
                $url = sprintf(self::GET_ACCESS_TOKNE_URL, $this->appId, $this->appKey);
                $response = $client->json($url, $postData);
                $body = $client->parseJSON($response);
                if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
                    $token = $body['body']['accessToken'];
                    $redis->setex(self::ACCESS_TOKNE_KEY, 3400, $token);

                    $result->setStatus(Result::STATUS_OK);
                    $result->setData($token);
                } else {
                    $result->setMessage($body['head']['message']);
                }
            } catch(\Exception $e) {
                $result->setMessage($e->getMessage());
            }
        } else {
            $result->setStatus(Result::STATUS_OK);
            $result->setData($token);
        }

        return $result;
    }

    /**
     * 刷新token
     * @author daikanwu <daikanwu@jperation.com>
     */
    public function refreshAccessToken()
    {



    }

    /**
     * 快速下单
     * @param array $data 上传的数据
     * @return mixed
     * @author daikanwu
     */
    public function createShippingOrder(Array $data)
    {
        $result = new Result();
        try{
            $token = $this->getAccessToken()->getData();
            $client = new Http();
            $url = sprintf(self::CREATE_ORDER_URL, $token, $this->appId, $this->appKey);
            $postData = $this->getPostData($data);
            $response = $client->json($url, $postData);
            $body = $client->parseJSON($response);
            if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
                $orderId = $body['body']['orderId'];
                //根据订单号获取运单号
                if ($this->getMailNum($orderId)->getStatus() == Result::STATUS_FAIL) {
                    $result->setMessage($this->getMailNum($orderId)->getMessage());
                }

                $mailNo = $this->getMailNum($orderId)->getData();
                $result->setStatus(Result::STATUS_OK);
                $result->setData($mailNo);
            } else {
                $result->setMessage($body['head']['message']);
            }
        } catch(\Exception $e){
            $result->setMessage($e->getMessage());
        }
        return $result;
    }

    /**
     * 获取运单号
     * @param $orderId
     * @return Result
     * @author daikanwu <daikanwu@jperation.com>
     */
    public function getMailNum($orderId)
    {
        $result = new Result();
        try {
            $client = new Http();
            $token = $this->getAccessToken()->getData();
            $url = sprintf(self::GET_MAILNO_URL, $token, $this->appId, $this->appKey);
            $postData = array(
                "head" => [
                    "transMessageId" => $this->getTranMessageId(),
                    "transType" => self::GET_MAILNO_TYPE
                ],
                "body" => array('orderId' => $orderId)
            );
            $response = $client->json($url, $postData);
            $body = $client->parseJSON($response);
            Log::debug(json_encode($body));
            if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
                $mailNo = $body['body']['mailNo'];
                $result->setStatus(Result::STATUS_OK);
                $result->setData($mailNo);
            } else {
                $result->setMessage($body['head']['message']);
            }
        } catch(\Exception $e) {
            $result->setMessage($e->getMessage());
        }

        return $result;
    }

    /**
     * 组装接口的请求数据
     * @param $data
     * @return array
     * @author daikanwu
     */
//    protected function getPostData($data)
//    {
//        return array(
//            "head" => [
//                "transMessageId" => $this->getTranMessageId(),
//                "transType" => self::CREATE_ORDER_TYPE
//            ],
//            "body" => array(
//                "addedServices" => [
//                    [
//                        "name" => "CUSTID",
//                        "value" => "7550010173"
//                    ]
//                ],
//                "cargoInfo" => [
//                    "cargo" => "iphone5s",
//                    "cargoAmount" => "",
//                    "cargoCount" => "",
//                    "cargoTotalWeight" => "",
//                    "cargoUnit" => "",
//                    "cargoWeight" => "",
//                    "parcelQuantity" => "1"
//                ],
//                "consigneeInfo" => [
//                    "address" => "世界第一广场",
//                    "city" => "深圳",
//                    "company" => "顺丰",
//                    "contact" => "黄飞鸿",
//                    "country" => "",
//                    "mobile" => "18588413321",
//                    "province" => "广东",
//                    "shipperCode" => "518100",
//                    "tel" => "075533915561"
//                ],
//                "custId" => "7550010173",
//                "payArea" => "755CQ",
//                "deliverInfo" => [
//                    "address" => "上地",
//                    "city" => "朝阳",
//                    "company" => "京东",
//                    "contact" => "李卡卡",
//                    "country" => "中国",
//                    "mobile" => "13612822894",
//                    "province" => "北京",
//                    "shipperCode" => "787564",
//                    "tel" => "010-95123669"
//                ],
//                "expressType" => 2,
//                "isDoCall" => 2,
//                "isGenBillNo" => 1,
//                "needReturnTrackingNo" => 1,
//                "orderId" => "955893859438958433234353432",
//                "payMethod" => 3,
//                "remark" => "易碎物品，小心轻放",
//                "sendStartTime" => "2014-08-26 08:31:55"
//            ));
//    }

    /**
     * 组装接口的请求数据，线上的
     * @param $data
     * @return array
     * @author daikanwu
     */
    protected function getPostData($data)
    {
        return array(
            "head" => [
                "transMessageId" => $this->getTranMessageId(),
                "transType" => self::CREATE_ORDER_TYPE
            ],
            "body" => array(
                "addedServices" => [
                    [
                        "name" => "CUSTID",
                        "value" => "7550010173"
                    ]
                ],
                "cargoInfo" => [
                    "cargo" => $data['name'],
                    "cargoAmount" => "",
                    "cargoCount" => "",
                    "cargoTotalWeight" => "",
                    "cargoUnit" => "",
                    "cargoWeight" => "",
                    "parcelQuantity" => 1
                ],
                "consigneeInfo" => [
                    "address" => $data['address'],
                    "city" => "深圳",
                    "company" => "顺丰",
                    "contact" => $data['contacts'],
                    "country" => "中国",
                    "mobile" => $data['phone'],
                    "province" => "广东",
                    "shipperCode" => "",
                    "tel" => $data['phone']
                ],
                "custId" => "7550010173",
                "payArea" => "755A",
                "deliverInfo" => [
                    "address" => "",
                    "city" => "",
                    "company" => "",
                    "contact" => "",
                    "country" => "",
                    "mobile" => "",
                    "province" => "",
                    "shipperCode" => "",
                    "tel" => ""
                ],
                "expressType" => 1,
                "isDoCall" => 1,
                "isGenBillNo" => 1,
                "needReturnTrackingNo" => 1,
                "orderId" => $data['order_id'],
                "payMethod" => 3,
                "remark" => isset($data['remark']) ? $data['remark'] : "易碎物品，小心轻放",
                "sendStartTime" => date('Y-m-d H:i:s', time())
            ));
    }

    /**
     * 获取交易流水号
     * @author daikanwu
     */
    protected function getTranMessageId()
    {
        return date('YmdHis', time()).mt_rand(1000, 9999);
    }
}