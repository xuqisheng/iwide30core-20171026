<?php

namespace App\models\soma;


/**
 * Class Activity_killsec_user
 * @package App\models\soma
 * @author renshuai  <renshuai@mofly.cn>
 *
 */
class Activity_killsec_user extends \MY_Model_Soma
{
    const USER_STATUS_JOIN  = 1;
    const USER_STATUS_ORDER = 2;
    const USER_STATUS_PAYMENT= 3;

    /**
     * @return string
     * @author renshuai  <renshuai@mofly.cn>
     */
    public function table_primary_key()
    {
        return 'user_id';
    }

    /**
     * @return string
     * @author renshuai  <renshuai@mofly.cn>
     */
    public function table_name()
    {
        return 'soma_activity_killsec_user';
    }

    /**
     * @param $instanceID
     * @param $actID
     * @param $interID
     * @param $openid
     * @param $maxStock
     * @param string $token
     * @return int
     * @author renshuai  <renshuai@mofly.cn>
     */
    public function save($instanceID, $actID, $interID, $openid, $maxStock, $token = '')
    {
        $data = [
            'business' => 'package',
            'instance_id' => $instanceID,
            'token' => $token,
            'act_id' => $actID,
            'inter_id' => $interID,
            'openid' => $openid,
            'join_time' => date('Y-m-d H:i:s'),
            'max_stock' => $maxStock,
            'remote_ip'=> $this->input->ip_address(),
            'status' => self::USER_STATUS_JOIN
        ];

        $this->soma_db_conn->set($data)->insert($this->table_name());

        return $this->soma_db_conn->insert_id();
    }

    /**
     * @param $interID
     * @param $openid
     * @param $instanceID
     * @return int
     * @author renshuai  <renshuai@mofly.cn>
     */
    public function getUsedCount($interID, $openid, $instanceID)
    {
        $count = 0;
        $rows = $this->get(
            [
                'inter_id',
                'instance_id',
                'openid',
            ],
            [
                $interID,
                $instanceID,
                $openid,
            ]
        );

        if (empty($rows)) return $count;

        $row = $rows[0];

        switch ($row['status']) {
            case self::USER_STATUS_JOIN:
                break;
            case self::USER_STATUS_ORDER:
                break;
            case self::USER_STATUS_PAYMENT:
                $count = 1;
                break;
        }

        return $count;
    }



}