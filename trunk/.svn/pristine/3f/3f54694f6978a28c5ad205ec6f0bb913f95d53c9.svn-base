<?php
defined('BASEPATH') OR exit('No direct script access allowed');
class Rooms_model extends MY_Model {
public function get_resource_name()
	{
		return '房型信息';
	}
	
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
	
	/**
	 * @return string the associated database table name
	 */
	public function table_name()
	{
		return 'hotel_rooms';
	}

	public function table_primary_key()
	{
	    return 'room_id';
	}
	
	public function attribute_labels()
	{
		return array('room_id'     => '房型ID',
					 'hotel_id'    => '酒店ID',
					 'inter_id'    => '公众号ID',
					 'name'        => '*房型名称',
					 'price'       => '*微信价',
					 'oprice'      => '*单价',
					 'description' => '描述',
					 'nums'        => '*数量',
					 'bed_num'     => '床数',
					 'status'      => '状态',
					 'area'        => '面积',
					 'sort'        => '排序',
					 'book_policy' => 'book_policy',
					 'sub_des' => '简介',
					 'webser_id' => '房型webID(非必填)',
					 'room_img'    => '房型缩略图',
					 'type'		   => '类型');
	}

	/**
	 * 后台管理的表格中要显示哪些字段
	 */
	public function grid_fields()
	{
	    return array(
	    	'room_id',
			'name',
			'price',
			'nums',
			'bed_num',
			'status',
			'area',
			'sort',
			'hotel_id',
			'inter_id'
		);
	}

	/**
	 * 在EasyUI grid中的 date-option 定义，包括宽度，是否排序等等
	 *   type: grid中的表头类型定义 
	 *   form_type: form中的元素类型定义
	 *   form_ui: form中的属性补充定义，如加disabled 在< input “disabled” / > 使元素禁用
	 *   form_tips: form中的label信息提示
	 *   form_hide: form中自动化输出中剔除
	 *   form_default: form中的默认值，请用字符类型，不要用数字
	 *   select: form中的类型为 combobox时，定义其下来列表
	 */
	public function attribute_ui()
	{
	    /* text,textbox,numberbox,numberspinner, combobox,combotree,combogrid,datebox,datetimebox, timespinner,datetimespinner, textarea,checkbox,validatebox. */
	    //type: numberbox数字框|combobox下拉框|text不写时默认|datebox
	    $base_util= EA_base::inst();
	    $modules= config_item('admin_panels')? config_item('admin_panels'): array();
		//$parents= $this->get_cat_tree_option();

		$parents['0']= '一级分类';
		
		$status = array('1'=>'可用','2'=>'不可用');

        /** 获取本管理员的酒店权限  */
	    $this->_init_admin_hotels();
	    $publics = $hotels= array();
	    $filter= $filterH= NULL;

	    if( $this->_admin_inter_id== FULL_ACCESS ) $filter= array();
	    else if( $this->_admin_inter_id ) $filter= array('inter_id'=> $this->_admin_inter_id);
	    if(is_array($filter)){
    	    $this->load->model('wx/publics_model');
    	    $publics= $this->publics_model->get_public_hash($filter);
    	    $publics= $this->publics_model->array_to_hash($publics, 'name', 'inter_id');
    	    //$publics= $publics+ array(FULL_ACCESS=>'-所有公众号-');
	    }
	    
	    if( $this->_admin_hotels== FULL_ACCESS ) $filterH= array();
	    else if( $this->_admin_hotels ) $filterH= array('hotel_id'=> $this->_admin_hotels);
	    else $filterH= array();
	    $filterH['inter_id']= $this->_admin_inter_id;
	    $filterH['status']= array(1,2);
	    if( $publics && is_array($filterH)){
    	    $this->load->model('hotel/hotel_model');
    	    $hotels= $this->hotel_model->get_hotel_hash($filterH);
    	    $hotels= $this->hotel_model->array_to_hash($hotels, 'name', 'hotel_id');
	    }
        /** 获取本管理员的酒店权限  */
	    
	    return array(
            'name' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',	//textarea|text|combobox
            ),
            'price' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',	//textarea|text|combobox
            ),
            'oprice' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',	//textarea|text|combobox
            ),
            'nums' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',	//textarea|text|combobox
            ),
            'bed_num' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',	//textarea|text|combobox
            ),
            'sort' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '0',
                'type'=>'text',	//textarea|text|combobox
            ),
            'area' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '0',
                'type'=>'text',	//textarea|text|combobox
            ),
            'longitude' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '0',
                'type'=>'text',	//textarea|text|combobox
            ),
            'description' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '',
                'type'=>'textarea',	//textarea|text|combobox
            ),
            'book_policy' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '',
                'type'=>'textarea',	//textarea|text|combobox
            ),
            'room_img' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'form_default'=> '',
                'type'=>'text',	//textarea|text|combobox
            ),
            'hotel_id' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'combobox',
                'select'=> $hotels,
            ),
            'status' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'combobox',
                'select'=> $status,
            ),
            'inter_id' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'combobox',
                'select'=> $publics,
            ),
            'room_id' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',
            ),
            'sub_des' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',
            ),
            'webser_id' => array(
                'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',
//             	'form_hide'=> TRUE,
//                 'form_ui' => ' disabled '
            ),
            'type' => array(
            	'grid_ui'=> '',
                'grid_width'=> '10%',
                'type'=>'text',
            	'form_hide'=> TRUE,
                'form_ui' => ' disabled '
            	),
	    );
	}
	
	/**
	 * grid表格中默认哪个字段排序，排序方向
	 */
	public static function default_sort_field()
	{
	    return array('field'=>'room_id', 'sort'=>'desc');
	}
	
	/* 以上为AdminLTE 后台UI输出配置函数 */
	

	public function get_cat_tree_option()
	{
	    $array= '';
        //$array['_'. $k]= '+'. $v['label'];
        $tmp= $this->get_data_filter(array('parent_id'=> '0' ));
        //print_r($tmp);die;
        foreach ($tmp as $sv){
            $array[$sv['cat_id']]= '+'. $sv['cat_name'];
            $tmp2= $this->get_data_filter(array('parent_id'=> $sv['cat_id']));
            //print_r($array);die;
            foreach ($tmp2 as $ssv) {
                $array[$ssv['cat_id']]= '+---'. $ssv['cat_name'];
            }
        }
	    //print_r($array);die;
	    return $array;
	}
	function get_day_room_price($inter_id,$hotel_id,$room_id,$price_code,$begin_date,$end_date){
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'price_code'=>$price_code,' date(`date`) >='=>$begin_date,' date(`date`) <='=>$end_date));
		return $db_read->get('hotel_room_state');
	}

	function get_day_room_state($inter_id,$hotel_id,$room_id,$begin_date,$end_date){
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'price_code <'=> 0,' `date` >='=>$begin_date,' `date` <='=>$end_date));
		return $db_read->get('hotel_room_state');
	}

	function save_services($room_id = NULL){
		$db_read = $this->load->database('iwide_r1',true);
		$inter_id=$this->session->get_admin_inter_id();
		if($this->input->post('room_id'))$room_id=$this->input->post('room_id');
		$hotel_id=$this->input->post('hotel_id');
		$ser_kv = array('&#xe3;'=>'上网','&#xe5;'=>'叫醒服务','&#xe9;'=>'行李寄存','&#xe4;'=>'吹风机','&#xe8;'=>'Wifi','&#xeb;'=>'热水');
		$services = $this->input->post('ser[]');
// 		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'type'=>'hotel_room_service'));
		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'type'=>'hotel_room_service'));
		$cur_service=$db_read->get('hotel_images')->result_array();
		$cur_service=array_column($cur_service, NULL,'image_url');
// 		$this->db->delete('hotel_images');
		foreach ($services as $item) {
			if (isset($cur_service[$item])){
				if ($cur_service[$item]['status']!=1){
					$this->db->where(array('id'=>$cur_service[$item]['id'],'inter_id'=>$inter_id));
					$this->db->update('hotel_images',array('status'=>1));
				}
				unset($cur_service[$item]);
			}else {
				$sql = 'INSERT INTO '.$this->db->dbprefix('hotel_images')." (inter_id,hotel_id,room_id,sort,type,info,image_url,status) select ?,?,?,0,'hotel_room_service',info,image_url,1 FROM ".$this->db->dbprefix('hotel_images')." WHERE inter_id='defaultimg' AND type='hotel_room_service' AND image_url=?";
				$this->db->query($sql,array($inter_id,$hotel_id,$room_id,htmlspecialchars_decode($item)));
			}
		}
		if (!empty($cur_service)){
			$this->db->where_in('id',array_column($cur_service, 'id'));
			$this->db->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'type'=>'hotel_room_service'));
			$this->db->update('hotel_images',array('status'=>2));
		}
	}
	function get_hotel_rooms($inter_id,$hotel_id){
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id));
		return $db_read->get('hotel_rooms');
	}
	function get_focus_s(){
		$db_read = $this->load->database('iwide_r1',true);
		$this->_init_admin_hotels ();
		$publics = $hotels = array ();
		$filter = $filterH = NULL;
		$inter_id = $this->_admin_inter_id;
		if ($inter_id == FULL_ACCESS)
			$filter = array ();
		else if ($inter_id)
			$filter = array ('inter_id' => $inter_id );
		if (is_array ( $filter )) {
			$this->load->model ( 'wx/publics_model' );
			$publics = $this->publics_model->get_public_hash ( $filter );
			$publics = $this->publics_model->array_to_hash ( $publics, 'name', 'inter_id' );
			// $publics= $publics+ array(FULL_ACCESS=>'-所有公众号-');
		}
		
		if ($this->_admin_hotels == FULL_ACCESS)
			$filterH = array ();
		else if ($this->_admin_hotels)
			$filterH = array ('hotel_id' => $this->_admin_hotels );
		else
			$filterH = array ();
		$filterH ['status'] = array(1);
		if(!isset($filterH['inter_id']))$filterH['inter_id'] = $this->session->get_admin_inter_id();
		if ($publics && is_array ( $filterH )) {
			$this->load->model ( 'hotel/hotel_model' );
			$hotels = $this->hotel_model->get_hotel_hash ( $filterH );
			$hotels = $this->hotel_model->array_to_hash ( $hotels, 'name', 'hotel_id' );
		}
		$hotel_id = 0;
		$room_id  = 0;
		$keys = array_keys( $hotels);
		if($this->input->get('hid')){
			if(key_exists($this->input->get('hid'), $hotels))
			$hotel_id = $this->input->get('hid');
		}else{
			$hotel_id = $keys[0];
		}
		$rooms = $this->get_hotel_rooms($inter_id,$hotel_id)->result_array();
		$rids  = array_column( $rooms,'room_id');
		if($this->input->get('rid')){
			if(in_array($this->input->get('rid'), $rids))
			$room_id = $this->input->get('rid');
		}else{
			$room_id = isset($rids[0])?$rids[0]:0;
		}
		if ($inter_id == FULL_ACCESS) $inter_id = 'a429262687';
		$db_read->where(array('inter_id'=>$inter_id,'hotel_id'=>$hotel_id,'room_id'=>$room_id,'type'=>'hotel_room_lightbox','status'=>1));
		$focus_query = $db_read->get('hotel_images')->result();
		return array('hotels'=>$hotels,'rooms'=>$rooms,'focus'=>$focus_query,'room_id'=>$room_id,'hotel_id'=>$hotel_id,'inter_id'=>$inter_id);
	}
	function save_focus(){
		$datas['image_url']  = trim($this->input->post('imgurl'));
		$datas['info']       = trim($this->input->post('describe'));
		$datas['sort']       = $this->input->post('sort');

		$key_value = $this->input->post('key');
		if(empty($key_value)){
			$datas['inter_id']   = $this->input->post('inter_id');
			$datas['hotel_id']   = $this->input->post('hotel_id');
			$datas['room_id']    = $this->input->post('room_id');
			$datas['status']     = 1;
			$datas['type']       = 'hotel_room_lightbox';
			return $this->db->insert('hotel_images',$datas) > 0;
		}else{
			$this->db->where(array('room_id'=>$this->input->get('room_id'),'inter_id'=>$this->input->post('inter_id'),'hotel_id'=>$this->input->post('hotel_id'),'id'=>$this->input->post('key')));
			return $this->db->update('hotel_images',$datas) > 0;
		}
	}
	function del_focus(){
		$this->db->where(array('room_id'=>$this->input->get('room_id'),'hotel_id'=>$this->input->get('hotel_id'),'inter_id'=>$this->input->get('inter_id'),'id'=>$this->input->get('key')));
		return $this->db->delete('hotel_images') > 0;
	}

    function update_focus(){
        $this->db->where(array('room_id'=>$this->input->get('room_id'),'hotel_id'=>$this->input->get('hotel_id'),'inter_id'=>$this->input->get('inter_id'),'id'=>$this->input->get('key')));
        $data = array (
            'info' =>$this->input->get('info'),
            'sort' => $this->input->get('sort')
        );
        $imgurl = trim($this->input->get('imgurl'));
    	if(!empty($imgurl)){
    		$data['image_url'] = $imgurl;
    	}
        $this->db->update ( 'hotel_images', $data );
        return true;
    }
	public function load($id)
	{
		$pk= $this->table_primary_key();
		$values= $this->find(array($pk=> $id,'inter_id'=>$this->session->get_admin_inter_id()));
		if($values){
			$table= $this->table_name();
			$fields= $this->_db()->list_fields($table);
			$this->_attribute= array_values($fields);
	
			foreach ($fields as $v) {
				$this->_data[$v]= $values[$v];
			}
			//确保 $this->_data_org 的值是完整的
			$this->_data_org = $this->_data;
			return $this;
	
		} else {
			return NULL;
		}
	}

	public function m_save($data=NULL,$update = TRUE)
	{
		$pk= $this->table_primary_key();
		$table= $this->table_name();
		$fields= $this->_db()->list_fields($table);
		//手工生成主键字段，update=FALSE -- 2015-12-07 ounianfeng
		// 	    if( isset($this->_data[$pk]) && $this->_data[$pk]>0 ) {
		if(!isset($this->_data['inter_id']))$this->_data['inter_id'] = $this->session->get_admin_inter_id();
		if( isset($this->_data[$pk]) && !empty($this->_data[$pk]) && $update ) {
			if($data){
				foreach ($data as $k=>$v){
					if(in_array($k,$fields)) $this->_data[$k]= $v;
				}
			}
			$where= array( $pk=> $this->_data[$pk] ,'inter_id'=>$this->session->get_admin_inter_id());
	        $this->_db()->where($where);
			$result= $this->_db()->update($table, $this->_data);
			return $result;
	
		} else {
			if($data){
				foreach ($data as $k=>$v){
					if(in_array($k,$fields)) $this->_data[$k]= $v;
				}
			}
			//手工生成主键字段时，不释放主键的变量 -- 2015-12-07 ounianfeng --
			if($update)unset($this->_data[$pk]);
			$result= $this->_db()->insert($table, $this->_data);
			
			//成功插入后返回last insert id
			if($result==TRUE){
				return $this->_db()->insert_id();
			} else {
				return $result;
			}
		}
	}
	
	function get_hotels_rooms($inter_id,$hotel_ids=array(),$select='*',$format=TRUE,$status=NULL,$room_ids=array()){
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->select($select);
		$db_read->where('inter_id',$inter_id);
		empty($hotel_ids)?:$db_read->where_in('hotel_id',$hotel_ids);
		empty($room_ids)?:$db_read->where_in('room_id',$room_ids);
		is_null($status)?$db_read->where_in('status',array(1,2)):$db_read->where('status',$status);
		$rooms=$db_read->get('hotel_rooms')->result_array();
		if ($format&&!empty($rooms)){
			$data=array();
			foreach ($rooms as $r) {
				$data[$r['hotel_id']][$r['room_id']]=$r;
			}
			return $data;
		}
		return $rooms;
	}

	//获取有设置对应价格代码的room_ids
	function get_pcode_roomids($inter_id, $hotel_ids ,$pcode , $status = null) {
        $db_read = $this->load->database('iwide_r1',true);
		$db_read->select ( 'room_id' );
		$db_read->where ( array (
				'inter_id' => $inter_id,
				'price_code' => $pcode
		) );
		if(!empty($hotel_ids)){
			$db_read->where_in ( 'hotel_id', explode(',',$hotel_ids) );
		}
		if (! is_null ( $status )){
			if(is_array($status))
				$db_read->where_in ( 'status', $status );
			else
				$db_read->where ( 'status', $status );
		} else
			$db_read->where_in ( 'status', array(0,1,2,3) );

		$db_read->group_by ( 'room_id' );
		return $db_read->get ( 'hotel_price_set' )->result_array ();
	}
}