<?php
use App\services\member\CardService;
defined('BASEPATH') OR exit('No direct script access allowed');
// +----------------------------------------------------------------------
// | 优惠券列表
// +----------------------------------------------------------------------
// | copyright: http://www.iwide.cn
// +----------------------------------------------------------------------
// | Author: liwensong <septet-l@outlook.com>
// +----------------------------------------------------------------------
// | version 4.0
// +----------------------------------------------------------------------
// | Center.php 2017-07-18
// +----------------------------------------------------------------------
/**
 * Class Card
 * @property Member_model $mem
 * @property Member_model $m_model
 * @property CI_Input  $input
 * @property CI_Loader $load
 */
class Card extends MY_Front_Member_Iapi
{   private $initTime;
    private $endt;
    private $url_group = array();
    private   $extra = array();
    protected $args = array();
    private   $client_ip = '';
    public function __construct()
    {
        $this->initTime = microtime(true);
        parent::__construct();
        $this->endt = microtime(true);

        $this->load->library("MYLOG");
        $this->load->helper('common_helper');

        $this->args = get_args();
        $this->client_ip = $this->input->ip_address();
        MYLOG::w(@json_encode(array('args' => $this->args, 'client_ip' => $this->client_ip)), 'iapi/front/membervip/debug-log', 'card-call');

        //设置前端需要用到的URL
        $this->url_group['cardcenter_url'] = base_url("index.php/membervip/card?id={$this->inter_id}");
        $this->url_group['cardinfo_url'] = base_url("index.php/membervip/card/cardinfo?id={$this->inter_id}");
        $this->url_group['pcardinfo_url'] = base_url("index.php/membervip/card/pcardinfo?id={$this->inter_id}");
        $this->url_group['center_url'] = base_url("index.php/membervip/center?id={$this->inter_id}");
        $this->url_group['qrcodecon_url'] = base_url("index.php/membervip/center/qrcodecon?id={$this->inter_id}");
        $this->url_group['gift_card_url'] = base_url("index.php/membervip/card/gift_card?id={$this->inter_id}");
        $this->url_group['passwduseoff_url'] = base_url("index.php/membervip/card/passwduseoff?id={$this->inter_id}");
        $this->url_group['getpackage_url'] = base_url("index.php/membervip/card/getpackage?id={$this->inter_id}");
        $this->url_group['addcard_url'] = base_url("index.php/membervip/card/addcard?id={$this->inter_id}");
        $this->url_group['givecard_url'] = base_url("index.php/membervip/card/givecard?id={$this->inter_id}");
        $this->url_group['hang_card_url'] = base_url("index.php/membervip/card/hang_card?id={$this->inter_id}");
        $this->url_group['savegivecard_url'] = base_url("index.php/membervip/card/savegivecard?id={$this->inter_id}");
        $this->url_group['receive_card_url'] = base_url("index.php/membervip/card/receive_card?id={$this->inter_id}");
        $this->url_group['check_useoff_url'] = base_url("index.php/membervip/card/check_useoff?id={$this->inter_id}");

        $this->extra['links'] = $this->url_group;
    }

    //会员卡券列表
	public function index(){
        $card_result = CardService::getInstance()->index($this->inter_id,$this->openid,$this->_template,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/index',$this->extra);
	}

    //获取pms卡券列表-隐居定制
    public function pcard(){
        $card_result = CardService::getInstance()->pcard($this->inter_id,$this->openid,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/pcard',$this->extra);
    }

    public function pcardinfo(){
        $member_card_id = !empty($this->args['member_card_id']) ? $this->args['member_card_id'] : 0;
        $card_result = CardService::getInstance()->pcardinfo($this->inter_id,$this->openid,$member_card_id,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/pcardinfo',$this->extra);
    }

	//Ajax会员卡券列表
	public function ajax_card(){
        $next_id = !empty($this->args['next_id']) ? $this->args['next_id'] : 0;
        $card_result = CardService::getInstance()->ajax_card($this->inter_id,$this->openid,$next_id,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/ajax_card',$this->extra);
    }

	//会员自主领取优惠页面
	public function getcard(){
        $card_rule_id = !empty($this->args['card_rule_id']) ? intval($this->args['card_rule_id']) : 0;
        $card_result = CardService::getInstance()->getcard($this->inter_id,$this->openid,$card_rule_id,$this->_template_filed_names,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/getcard',$this->extra);
    }

	//领取卡券
	public function addcard(){
		$card_rule_id = !empty($this->args['card_rule_id'])?(int)$this->args['card_rule_id']:0;
        $card_result = CardService::getInstance()->addcard($this->inter_id,$this->openid,$card_rule_id);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/addcard',$this->extra);
	}

	//转赠卡券挂起
	public function hang_card(){
        $member_card_id = !empty($this->args['card_id']) ? $this->args['card_id']:'';
        $card_result = CardService::getInstance()->hang_card($this->inter_id,$this->openid,$member_card_id);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/hang_card',$this->extra);
	}

    //转赠优惠券挂起
    public function gift_card(){
	    $member_card_id = !empty($this->args['mcid']) ? floatval($this->args['mcid']):'';
	    $module = !empty($this->args['module']) ? $this->args['module']:'';
	    $card_code = !empty($this->args['card_code']) ? $this->args['card_code']:'';
        $card_result = CardService::getInstance()->gift_card($this->inter_id,$this->openid,$member_card_id,$module,$card_code);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/gift_card',$this->extra);
    }

    //转赠优惠券领取
    public function receive_card(){
        $ec_code = !empty($this->args['ec_code']) ? $this->args['ec_code']:'';
        $card_result = CardService::getInstance()->receive_card($this->inter_id,$this->openid,$ec_code);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/receive_card',$this->extra);
    }

	//保存卡券转赠信息
	public function savegivecard(){
        $from_openid = !empty($this->args['cardOpenid']) ? $this->args['cardOpenid']:'';
		$card_id = !empty($this->args['card_id']) ? $this->args['card_id']:'';
		$cardModule = 'vip';
        $card_result = CardService::getInstance()->savegivecard($this->inter_id,$this->openid,$from_openid,$card_id,$cardModule);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/savegivecard',$this->extra);
    }

    //卡券详细页面
    public function receive(){
        $ec_code = !empty($this->args['sf']) ? $this->args['sf']:'';
        $card_result = CardService::getInstance()->receive($this->inter_id,$this->openid,$ec_code,$this->url_group,true);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/receive',$this->extra);
    }

	//卡券详细页面
	public function cardinfo(){
        $member_card_id = !empty($this->args['member_card_id']) ? intval($this->args['member_card_id']):'';
        $card_result = CardService::getInstance()->cardinfo($this->inter_id,$this->openid,$member_card_id,$this->url_group,true);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/cardinfo',$this->extra);
    }

	//卡券扫码使用
	public function codeuseoff(){
        $card_result = CardService::getInstance()->codeuseoff($this->inter_id,$this->openid);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/codeuseoff',$this->extra);
    }

	/**
     * 扫码核销异步请求
     */
	public function card_callback(){
        $code = !empty($this->args['code']) ? $this->args['code']:'';
        $card_result = CardService::getInstance()->card_callback($this->inter_id,$this->openid,$code);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/card_callback',$this->extra);
	}

	/**
	*	消费码核销
	*
	*/
	public function passwduseoff(){
		$member_card_id = !empty($this->args['member_card_id']) ? $this->args['member_card_id']:'';
		$passwd = !empty($this->args['passwd']) ? $this->args['passwd']:'';
        $card_result = CardService::getInstance()->passwduseoff($this->inter_id,$this->openid,$member_card_id,$passwd);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/passwduseoff',$this->extra);
	}

	public function getpackage(){
        $package_id = !empty($this->args['package_id']) ? $this->args['package_id']:0;
        $frequency = !empty($this->args['frequency']) ? $this->args['frequency']:0;
        $card_rule_id = !empty($this->args['card_rule_id']) ? $this->args['card_rule_id']:0;
        $card_result = CardService::getInstance()->getpackage($this->inter_id,$this->openid,$package_id,$frequency,$card_rule_id);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/getpackage',$this->extra);
    }

    /**
     * 获取微信JSSDK配置信息
     * @param $inter_id
     * @param string $url
     * @return array
     */
    protected function _get_sign_package($inter_id, $url=''){
        $this->load->helper('common');
        $this->load->model('wx/publics_model', 'publics');
        $this->load->model('wx/access_token_model');
        $jsapiTicket = $this->access_token_model->get_api_ticket( $inter_id );

        $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off'
            || $_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";
        if(!$url)
            $url = "$protocol$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

        $timestamp = time();
        $nonceStr = createNonceStr();
        $public = $this->publics->get_public_by_id( $inter_id );

        // 这里参数的顺序要按照 key 值 ASCII 码升序排序
        $string = "jsapi_ticket=$jsapiTicket&noncestr=$nonceStr&timestamp=$timestamp&url=$url";
        $signature = sha1($string);
        $signPackage = array(
            "appId"     => $public['app_id'],
            "nonceStr"  => $nonceStr,
            "timestamp" => $timestamp,
            "url"       => $url,
            "signature" => $signature,
            "rawString" => $string
        );
        return $signPackage;
    }


    //通过券码检测优惠券是否已经使用和核销
    public function check_useoff(){
        $coupon_code = !empty($this->args['coupon_code']) ? $this->args['coupon_code']:'';
        $card_result = CardService::getInstance()->check_useoff($this->inter_id,$this->openid,$coupon_code,$this->url_group);
        $this->out_put_msg($card_result['status'],$card_result['msg'],$card_result['data'],'membervip/card/check_useoff',$this->extra);
    }
}
?>