<?php
/**
 * @todo 订房分销规则
 * @author lijiaping
 * @since 2016-08-04
 */
class Idistribution_model extends MY_Model {

	function __construct() {
		parent::__construct ();
	}

	//分销规则表
	const TAB_IC = 'distribution_config';
	const STATUS_ON = 1;	//规则开启
	const STATUS_OFF = 2;	//规则关闭

	//获取规则列表
	public function get_list($inter_id)
	{
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->order_by ( 'id desc' );
		$db_read->where ( array (
				'inter_id' => $inter_id
		) );
		$list = $db_read->get ( self::TAB_IC )->result_array ();
		return $list;
	}

	//
	function fields_config() {
		$user_operations = array (
				'rule_check' => array (
						'<a href="',
						'key' => site_url ( 'hotel/distribute/rule_check' ),
						'" class="btn btn-info btn-xs" title="查看"><i class="fa fa-file-o"></i>查看</a> '
				),
				'rule_edit' => array (
						'<a href="',
						'key' => site_url ( 'hotel/distribute/rule_edit' ),
						'" class="btn btn-success btn-xs" title="编辑"><i class="fa fa-edit"></i> 编辑</a>'
				)
		);
		$acl_array = $this->session->allow_actions;
		$acl_array = $acl_array [ADMINHTML];
		foreach ( $user_operations as $oper => $link ) {
			if (($acl_array != FULL_ACCESS) && (! isset ( $acl_array ['hotel'] ['distribute'] ) || ! in_array ( $oper, $acl_array ['hotel'] ['distribute'] ))) {
				unset ( $user_operations [$oper] );
			}
		}
		return array (
				'id' => array (
						'label' => '规则编号' 
				),
				'title' => array (
						'label' => '规则名称' 
				),
				'beyond' => array (
						'label' => '规则类型',
						'select' => $this->enums ( 'beyond' ) 
				),
				'excitation_type'=>array(
						'label'=>'激励方式',
						'select'=>$this->enums('excitation_type')
				),
				'status' => array (
						'label' => '状态',
						'select' => $this->enums ( 'status' ) 
				),
				'createtime' => array (
						'label' => '创建时间',
						'format' => 'Y-m-d H:i:s'
				),
				'uptime' => array (
						'label' => '最后更新时间',
						'format' => 'Y-m-d H:i:s'
				) ,
				'user_operations' => array (
						'label' => '操作',
						'user_operations' => $user_operations 
				) 
		);
	}
	function enums($type) {
		switch ($type) {
			case 'status' :
				return array (
						'1' => '有效',
						'2' => '无效'
				);
				break;
			case 'beyond' :
				return array (
						'1' => '粉丝归属',
						'2' => '社群客归属',
						'3' => '推荐购买'
				);
				break;
			case 'excitation_type' :
				return array (
						'1' => '优惠后房价百分比', 
						'2' => '每个订单激励固定金额', 
						'3' => '每间夜激励固定金额'
				);
				break;
			default :
				break;
		}
	}

	//查看详细规则
	public function get_row($inter_id,$id)
	{
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->where ( array (
				'inter_id' => $inter_id,
				'id' => $id
		) );
		$row = $db_read->get ( self::TAB_IC )->row_array ();
		if($row){
			//将价格代码转为数组
			$row['price_typeid'] = explode('-', trim($row['price_typeid'],'-'));
			//将支付方式转为数组
			$row['pay_wayid'] = explode('-', trim($row['pay_wayid'],'-'));
			if(empty($row['hotel_ids'])){
				$row['hotel_all'] = 1;
			}else{
				$row['hotel_all'] = 2;
			}
			//将酒店ids转为数组
			$row['hotel_ids'] = explode('-', trim($row['hotel_ids'],'-'));
		}
		
		return $row;
	}

	//修改规则
	public function edit_dc($params)
	{
		$admin_profile = $this->session->admin_profile;
		$inter_id = $admin_profile['inter_id'];

		$id = $params['id'];
		//过滤可更新字段
		$this->load->helper ( 'array' );
		$params = elements(array('title', 'beyond', 'price_typeid', 'pay_wayid', 'excitation_type', 'excitation_value', 'starttime','endtime', 'weight', 'status' ,'all','myself','fullmoney','hotel_ids'), $params);
		if (empty($params['title']) || empty($params['beyond']) || empty($params['pay_wayid']) || empty($params['excitation_type']) || empty($params['excitation_value']) || empty($params['weight']) || empty($params['status']) || empty($params['all']) || empty($params['myself'])) {
			// 更新字段不能为空
			return false;
		}
		//格式化价格代码
		$params['price_typeid'] = '-'.implode('-',$params['price_typeid']).'-';
		//格式化支付方式
		$params['pay_wayid'] = '-'.implode('-',$params['pay_wayid']).'-';
		if(!empty($params['hotel_ids']) && is_array($params['hotel_ids'])){
			//格式化门店id
			$params['hotel_ids'] = '-'.implode('-',$params['hotel_ids']).'-';
		}else{
			$params['hotel_ids'] = '';
		}
		$this->db->where ( array (
				'inter_id' => $inter_id,
				'id' => $id 
		) );
		$params ['uptime'] = time ();
		//记录日志
		$this->load->model('hotel/Hotel_log_model');
		$this->Hotel_log_model->add_admin_log('Idistribution/dc#'.$id,'edit',json_encode($params));
		$this->db->where ( array (
				'inter_id' => $inter_id,
				'id' => $id 
		) );
		return $this->db->update ( self::TAB_IC, $params);
	}

	//新增规则
	public function add_dc($params)
	{
		//过滤可更新字段
		$this->load->helper ( 'array' );
		$params = elements(array('title', 'beyond', 'price_typeid', 'pay_wayid', 'excitation_type', 'excitation_value', 'starttime','endtime', 'weight', 'status', 'all','myself','fullmoney','hotel_ids'), $params);
		if (empty($params['title']) || empty($params['beyond']) || empty($params['pay_wayid']) || empty($params['excitation_type']) || empty($params['excitation_value']) || empty($params['weight']) || empty($params['status']) || empty($params['all']) || empty($params['myself'])) {
			// 更新字段不能为空
			return false;
		}
		//初始化创建者信息
		$admin_profile = $this->session->admin_profile;
		$params['inter_id'] = $admin_profile['inter_id'];//创建者interid

		$params['admin_id'] = $admin_profile['admin_id'];//创建者id
		$this->load->helper ( 'common' );
		$params['remote_ip'] = getIp ();//创建者ip
		$params ['createtime'] = time ();
		$params ['uptime'] = time ();

		//格式化价格代码
		$params['price_typeid'] = '-'.implode('-',$params['price_typeid']).'-';
		//格式化支付方式
		$params['pay_wayid'] = '-'.implode('-',$params['pay_wayid']).'-';
		if(!$params['hotel_ids'] && is_array($params['hotel_ids'])){
			//格式化门店id
			$params['hotel_ids'] = '-'.implode('-',$params['hotel_ids']).'-';
		}else{
			$params['hotel_ids'] = '';
		}
		$this->db->insert ( self::TAB_IC, $params );
		//记录日志
		$this->load->model('hotel/Hotel_log_model');
		$this->Hotel_log_model->add_admin_log('Idistribution/dc#'.$this->db->insert_id (),'add',json_encode($params));
		return $this->db->insert_id ();
	}

	//匹配最优规则
	public function get_best($params){
		$this->load->model ( 'distribute/Idistribute_model' );//加载分销接口
		// $where = array (
		// 	'inter_id' => $params['inter_id'],
		// 	'status' => self::STATUS_ON,//状态有效
		// 	'beyond' => 1,//粉丝归属
		// 	'starttime <=' => $params['now_time'],//开始时间
		// 	'endtime >=' => $params['now_time'],//结束时间
		// );
		// $like = array (
		// 	'price_typeid' => '-'.$params['price_typeid'].'-',//匹配价格代码
		// 	'pay_wayid' => '-'.$params['pay_wayid'].'-'//匹配支付方式
		// );
		$msg1 = '';
		$msg = '';
		$money = '';
		$data = '';
		$db_read = $this->load->database('iwide_r1',true);
		$sql = "SELECT excitation_type,excitation_value,hotel_value,group_value,jfk_value,myself FROM ".$db_read->dbprefix ( self::TAB_IC )." WHERE `inter_id`='$params[inter_id]' AND `status`=".self::STATUS_ON." AND `starttime` <= '$params[now_time]' AND `endtime` >= '$params[now_time]' AND pay_wayid LIKE '%-$params[pay_wayid]-%' AND (`all`=1 OR  price_typeid LIKE '%-$params[price_typeid]-%') AND (`hotel_ids`='' OR  hotel_ids LIKE '%-$params[hotel_id]-%') AND $params[order_amount]>=`fullmoney` ";
		$row=array();
		//有粉丝归属才执行
		if($params['fans_source'] && !$params['saler'] && !$params['link_saler']){
			
			// $db_read->where ($where);
			// $db_read->like ($like);
			$fans_sql = $sql."AND beyond=1 ORDER BY weight desc LIMIT 0,1";
			// $db_read->order_by('weight desc');//取最优匹配
			// $row = $db_read->get ( self::TAB_IC )->row_array ();
			$row =  $db_read->query ( $fans_sql )->row_array ();
			$msg = $db_read->last_query();
			//处理粉丝归属信息，计算
			if($row){
				$money = $this->get_count($row['excitation_type'],$params['grade_amount'],$params['days'],$row['excitation_value'],$row['hotel_value'],$row['group_value'],$row['jfk_value']);
				if($money){
					$data = array (
						"inter_id" => $params['inter_id'],//公众号ID
						"hotel_id" => $params['hotel_id'],//下单酒店ID
						"grade_openid" => $params['grade_openid'],//粉丝openid
						"grade_table" => "iwide_hotels_order",//订房的订单表
						"grade_id" => $params['grade_id'],//记录产生绩效的表的主键值
						"grade_id_name" => "id",//记录产生绩效的表的ID名称
						"order_amount" => $params['order_amount'],//订单总金额（包含优惠折扣金额）
						"grade_total" => $money['saler'],//绩效总金额（默认-1）
						"grade_amount" => $params['grade_amount'],//订单计算绩效部分的金额
						"status" => 4,//未核定－尚未离店
						"grade_amount_rate" => ($row['excitation_type']==1)? bcdiv($row['excitation_value'],100,4) : $row['excitation_value'],//绩效值/比例（grade_total等于-1，此字段可以不传）
						"grade_rate_type" => ($row['excitation_type']+1),//订房激励2：优惠后房价百分比3：每个订单激励固定金额4：每间/夜激励固定金额
						"remark" => "订房下单生成分销信息",//备注
						"product" => $params['product'],//产品名称
						"order_status" => $params['istatus'],//订单状态
						"fans_hotel" => $params['fans_hotel'],//粉丝所属酒店
						"hotel_rate" => ($row['excitation_type']==1)? bcdiv($row['hotel_value'],100,2) : $row['hotel_value'],//酒店绩效规则值
						"group_rate" => ($row['excitation_type']==1)? bcdiv($row['group_value'],100,2) : $row['group_value'],//集团绩效规则值
						"jfk_rate" => ($row['excitation_type']==1)? bcdiv($row['jfk_value'],100,2) : $row['jfk_value'],//金房卡绩效规则值
						"hotel_grades" => $money['hotel'],//酒店绩效金额
						"group_grades" => $money['group'],//集团绩效金额
						"jfk_grades" => $money['jfk'],//金房卡绩效金额
						"grade_typ" => 1,//分销来源类型,1|粉丝归属,2|分享绩效
						"order_id" => $params['order_id']//订单号(如果有PMS订单号传PMS订单号)
					);

					//分销员下单绩效总归自己
					if($row['myself']==1&& $params['own_saler']>0){
						$data['saler'] = $params['own_saler'];
					}
					$this->Idistribute_model->create_dist ( $data );//创建数据
				}
				$this->write_log($row,$money,$data);
			}
		}

		//有社群客id才执行
		if($params['saler']){
			//初始化查询条件
			$db_read->reset_query();
			// $where['beyond'] = 2;//社群客归属
			// $db_read->where ($where);
			// $db_read->like ($like);
			// $db_read->order_by('weight desc');//取最优匹配
			// $row = $db_read->get ( self::TAB_IC )->row_array ();
			$sqk_sql = $sql."AND beyond=2 ORDER BY weight desc LIMIT 0,1";//社群客归属
			$row =  $db_read->query ( $sqk_sql )->row_array ();
			$msg1 = $db_read->last_query();

			//处理社群客归属信息
			if($row){
				$money = $this->get_count($row['excitation_type'],$params['grade_amount'],$params['days'],$row['excitation_value'],$row['hotel_value'],$row['group_value'],$row['jfk_value']);
				if($money){
					$data = array (
						"inter_id" => $params['inter_id'],//公众号ID
						"hotel_id" => $params['hotel_id'],//下单酒店ID
						"saler" => $params['saler'],//分销号，粉丝归属的分销号不用传，按次计算需要传
						"grade_openid" => $params['grade_openid'],//粉丝openid
						"grade_table" => "iwide_hotels_order",//订房的订单表
						"grade_id" => $params['grade_id'],//记录产生绩效的表的主键值
						"grade_id_name" => "id",//记录产生绩效的表的ID名称
						"order_amount" => $params['order_amount'],//订单总金额（包含优惠折扣金额）
						"grade_total" => $money['saler'],//绩效总金额（默认-1）
						"grade_amount" => $params['grade_amount'],//订单计算绩效部分的金额
						"status" => 4,//未核定－尚未离店
						"grade_amount_rate" => ($row['excitation_type']==1)? bcdiv($row['excitation_value'],100,4) : $row['excitation_value'],//绩效值/比例（grade_total等于-1，此字段可以不传）
						"grade_rate_type" => ($row['excitation_type']+1),//订房激励2：优惠后房价百分比3：每个订单激励固定金额4：每间/夜激励固定金额
						"remark" => "订房下单生成分销信息",//备注
						"product" => $params['product'],//产品名称
						"order_status" => $params['istatus'],//订单状态
						"fans_hotel" => $params['fans_hotel'],//粉丝所属酒店
						"hotel_rate" => ($row['excitation_type']==1)? bcdiv($row['hotel_value'],100,2) : $row['hotel_value'],//酒店绩效规则值
						"group_rate" => ($row['excitation_type']==1)? bcdiv($row['group_value'],100,2) : $row['group_value'],//集团绩效规则值
						"jfk_rate" => ($row['excitation_type']==1)? bcdiv($row['jfk_value'],100,2) : $row['jfk_value'],//金房卡绩效规则值
						"hotel_grades" => $money['hotel'],//酒店绩效金额
						"group_grades" => $money['group'],//集团绩效金额
						"jfk_grades" => $money['jfk'],//金房卡绩效金额
						"grade_typ" => 2,//分销来源类型,1|粉丝归属,2|分享绩效
						"order_id" => $params['order_id']//订单号(如果有PMS订单号传PMS订单号)
					);
					$this->Idistribute_model->create_dist ( $data );//创建数据
				}
			}
		}
		//有链接分销员id才执行
		if($params['link_saler'] && !$params['saler']){
			//初始化查询条件
			$db_read->reset_query();
			$sqk_sql = $sql."AND beyond=3 ORDER BY weight desc LIMIT 0,1";//社群客归属
			$row =  $db_read->query ( $sqk_sql )->row_array ();

			if($row){
				$money = $this->get_count($row['excitation_type'],$params['grade_amount'],$params['days'],$row['excitation_value'],$row['hotel_value'],$row['group_value'],$row['jfk_value']);
				if($money){
					$data = array (
						"inter_id" => $params['inter_id'],//公众号ID
						"hotel_id" => $params['hotel_id'],//下单酒店ID
						"saler" => $params['link_saler'],//分销号，粉丝归属的分销号不用传，按次计算需要传
						"grade_openid" => $params['grade_openid'],//粉丝openid
						"grade_table" => "iwide_hotels_order",//订房的订单表
						"grade_id" => $params['grade_id'],//记录产生绩效的表的主键值
						"grade_id_name" => "id",//记录产生绩效的表的ID名称
						"order_amount" => $params['order_amount'],//订单总金额（包含优惠折扣金额）
						"grade_total" => $money['saler'],//绩效总金额（默认-1）
						"grade_amount" => $params['grade_amount'],//订单计算绩效部分的金额
						"status" => 4,//未核定－尚未离店
						"grade_amount_rate" => ($row['excitation_type']==1)? bcdiv($row['excitation_value'],100,4) : $row['excitation_value'],//绩效值/比例（grade_total等于-1，此字段可以不传）
						"grade_rate_type" => ($row['excitation_type']+1),//订房激励2：优惠后房价百分比3：每个订单激励固定金额4：每间/夜激励固定金额
						"remark" => "订房下单生成分销信息",//备注
						"product" => $params['product'],//产品名称
						"order_status" => $params['istatus'],//订单状态
						"fans_hotel" => $params['fans_hotel'],//粉丝所属酒店
						"hotel_rate" => ($row['excitation_type']==1)? bcdiv($row['hotel_value'],100,2) : $row['hotel_value'],//酒店绩效规则值
						"group_rate" => ($row['excitation_type']==1)? bcdiv($row['group_value'],100,2) : $row['group_value'],//集团绩效规则值
						"jfk_rate" => ($row['excitation_type']==1)? bcdiv($row['jfk_value'],100,2) : $row['jfk_value'],//金房卡绩效规则值
						"hotel_grades" => $money['hotel'],//酒店绩效金额
						"group_grades" => $money['group'],//集团绩效金额
						"jfk_grades" => $money['jfk'],//金房卡绩效金额
						"grade_typ" => 3,//分销来源类型,1|粉丝归属,2|分享绩效,3|链接分销员
						"order_id" => $params['order_id']//订单号(如果有PMS订单号传PMS订单号)
					);
					//分销员下单绩效总归自己
					if($row['myself']==1&& $params['own_saler']>0){
						$data['saler'] = $params['own_saler'];
					}
					$this->Idistribute_model->create_dist ( $data );//创建数据
				}
			}
		}
		$this->write_log($msg,$msg1,$params);

		return true;
	}

	/**
	 * 离店重新计算
	 * @param string $inter_id,公众号id
	 * @param int $grade_id,对应表主键
	 * @param decimal $grade_amount,订单金额
	 * @param int $days,间夜量
	 * @param int $order_status,订单状态
	 * @param int $olddays,原订单天数
	*/
	public function leave_recount($inter_id,$grade_id,$grade_amount,$days,$order_status,$olddays){
		$this->load->model ( 'distribute/Idistribute_model' );//加载分销接口
		$old = $this->Idistribute_model->get_single_grade_base($inter_id,"iwide_hotels_order",$grade_id,1);//查询下单时信息(粉丝归属的)
		$data = array(
			'inter_id'=>$inter_id,
			'grade_table'=>'iwide_hotels_order',
			'grade_id'=>$grade_id,
			'order_status'=>$order_status,
			'status'=>1,//交易成功
			'grade_typ'=>1//粉丝归属
		);

		//如果有对应分销信息
		if($old){
			if($grade_amount != $old->grade_amount || $days != $olddays){//如果价格或天数与下单时不同，才重新计算
				//兼容旧规则
				if($old->grade_rate_type < 2){
					//查询旧规则表
					$this->load->model('distribute/grades_model');
					$oldrule = $this->grades_model->get_grades_settings($inter_id,2);
					if($oldrule && $oldrule->excitation_type>1){//规则正常情况
						$excitation_type = $oldrule->excitation_type-1;
						if($excitation_type == 1){//百分比
							$old->grade_amount_rate = $oldrule->excitation_value* 100;
							$old->hotel_rate = $oldrule->hotel_value * 100;
							$old->group_rate = $oldrule->group_value * 100;
							$old->jfk_rate = $oldrule->jfk_value * 100;
						}
					}
				}else{
					$excitation_type = $old->grade_rate_type-1;
					if($excitation_type == 1){//百分比
						$old->grade_amount_rate = bcmul($old->grade_amount_rate , 100,2);
						$old->hotel_rate = $old->hotel_rate * 100;
						$old->group_rate = $old->group_rate * 100;
						$old->jfk_rate = $old->jfk_rate * 100;
					}
				}
				
				$money = $this->get_count($excitation_type,$grade_amount,$days,$old->grade_amount_rate,$old->hotel_rate,$old->group_rate,$old->jfk_rate);
				$data['grade_total'] = $money? $money['saler']:0;//绩效总金额
				$data['hotel_grades'] = $money? $money['hotel']:0;//酒店绩效金额
				$data['group_grades'] = $money? $money['group']:0;//集团绩效金额
				$data['jfk_grades'] = $money? $money['jfk']:0;//金房卡绩效金额
				$data['order_amount'] = $grade_amount;//订单总金额（包含优惠折扣金额）
				$data['grade_amount'] = $grade_amount;//订单计算绩效部分的金额
			}
			
			$this->Idistribute_model->create_dist ( $data );//更新分销信息
			
		}
		$this->write_log($old,$data,'离店');

		$old = $this->Idistribute_model->get_single_grade_base($inter_id,"iwide_hotels_order",$grade_id,2);//查询下单时信息(社群客归属的)
		//如果有对应分销信息
		if($old){
			if($grade_amount != $old->grade_amount){//如果价格与下单时不同，才重新计算
				$excitation_type = $old->grade_rate_type-1;
				if($excitation_type == 1){//百分比
					$old->grade_amount_rate = bcmul($old->grade_amount_rate , 100,2);
					$old->hotel_rate = $old->hotel_rate * 100;
					$old->group_rate = $old->group_rate * 100;
					$old->jfk_rate = $old->jfk_rate * 100;
				}
				$money = $this->get_count($excitation_type,$grade_amount,$days,$old->grade_amount_rate,$old->hotel_rate,$old->group_rate,$old->jfk_rate);
				$data['grade_total'] = $money? $money['saler']:0;//绩效总金额
				$data['hotel_grades'] = $money? $money['hotel']:0;//酒店绩效金额
				$data['group_grades'] = $money? $money['group']:0;//集团绩效金额
				$data['jfk_grades'] = $money? $money['jfk']:0;//金房卡绩效金额
				$data['order_amount'] = $grade_amount;//订单总金额（包含优惠折扣金额）
				$data['grade_amount'] = $grade_amount;//订单计算绩效部分的金额
			}
			$data['grade_typ'] = 2;//社群客归属
			$this->Idistribute_model->create_dist ( $data );//更新分销信息
			
		}

		$old = $this->Idistribute_model->get_single_grade_base($inter_id,"iwide_hotels_order",$grade_id,3);//查询下单时信息(链接分销员归属的)
		//如果有对应分销信息
		if($old){
			if($grade_amount != $old->grade_amount){//如果价格与下单时不同，才重新计算
				$excitation_type = $old->grade_rate_type-1;
				if($excitation_type == 1){//百分比
					$old->grade_amount_rate = bcmul($old->grade_amount_rate , 100,2);
					$old->hotel_rate = $old->hotel_rate * 100;
					$old->group_rate = $old->group_rate * 100;
					$old->jfk_rate = $old->jfk_rate * 100;
				}
				$money = $this->get_count($excitation_type,$grade_amount,$days,$old->grade_amount_rate,$old->hotel_rate,$old->group_rate,$old->jfk_rate);
				$data['grade_total'] = $money? $money['saler']:0;//绩效总金额
				$data['hotel_grades'] = $money? $money['hotel']:0;//酒店绩效金额
				$data['group_grades'] = $money? $money['group']:0;//集团绩效金额
				$data['jfk_grades'] = $money? $money['jfk']:0;//金房卡绩效金额
				$data['order_amount'] = $grade_amount;//订单总金额（包含优惠折扣金额）
				$data['grade_amount'] = $grade_amount;//订单计算绩效部分的金额
			}
			$data['grade_typ'] = 3;//链接分销员归属
			$this->Idistribute_model->create_dist ( $data );//更新分销信息
			
		}
		return true;
	}
	/**
	 * 计算金额
	 * @param int $excitation_type,激励类型
	 * @param decimal $grade_amount,订单计算绩效部分的金额
	 * @param int $days,间夜数量
	 * @param decimal $excitation_value,员工提成,按百分比时单位是%，按金额时单位是元
	 * @param decimal $hotel_grades,酒店提成,按百分比时单位是%，按金额时单位是元
	 * @param decimal $group_grades,集团提成,按百分比时单位是%，按金额时单位是元
	 * @param decimal $jfk_grades,金房卡提成,按百分比时单位是%，按金额时单位是元
	 * @return array $return,员工、酒店、集团、金房卡绩效
	*/
	private function get_count($excitation_type,$grade_amount,$days=1,$excitation_value=0,$hotel_grades=0,$group_grades=0,$jfk_grades=0){
		//初始化返回信息
		$return = array(
			'saler' => 0,//分销员
			'hotel' => 0,//酒店
			'group' => 0,//集团
			'jfk' => 0//金房卡
		);
		switch ($excitation_type) {
			case 1 :
				//优惠后房价百分比
				$return['saler'] = bcdiv(bcmul($grade_amount , $excitation_value,2) , 100 , 2);
				$return['hotel'] = bcdiv(bcmul($grade_amount , $hotel_grades,2) , 100 , 2);
				$return['group'] = bcdiv(bcmul($grade_amount , $group_grades,2) , 100 , 2);
				$return['jfk'] = bcdiv(bcmul($grade_amount , $jfk_grades,2) , 100 , 2);
				break;
			case 2 :
				//每个订单激励固定金额
				$return['saler'] = $excitation_value;
				$return['hotel'] = $hotel_grades;
				$return['group'] = $group_grades;
				$return['jfk'] = $jfk_grades;
				break;
			case 3 :
				//每间/夜激励固定金额
				$return['saler'] = bcmul($days , $excitation_value,2);
				$return['hotel'] = bcmul($days , $hotel_grades,2);
				$return['group'] = bcmul($days , $group_grades,2);
				$return['jfk'] = bcmul($days , $jfk_grades,2);
				break;
			default :
				return false;
		}
		if($return['saler']==0 && $return['hotel']==0 && $return['group']==0 && $return['jfk']==0){//若全部为0，不调用分销接口
			return false;
		}
		return $return;
	}

	private function write_log( $order,$result,$re)
	{
		$file= date('Y-m-d'). '.txt';
		//echo $tmpfile;die;
		$path= APPPATH.'logs'.DS. 'distribute1'. DS;
		
		if( !file_exists($path) ) {
			@mkdir($path, 0777, TRUE);
		}

		//echo $tmpfile;die;
		// $path= APPPATH.'logs'.DS. 'mysql_log'. DS;
		$order=json_encode($order);
		if(is_array($result)){
			$result=json_encode($result);
		}
		if(is_array($re)){
			$re=json_encode($re);
		}
		$fp = fopen($path.$file, "a");
		//echo __FILE__
		$content = date("Y-m-d H:i:s")." | ".getmypid()." | ".$_SERVER['PHP_SELF']." | ".session_id()." | ".$order." | ".$re." | ".$result."\n";
	
		fwrite($fp, $content);
		fclose($fp);
	}
	//检查新规则粉丝规则有没有开启
	public function check_new_on($inter_id)
	{
		$db_read = $this->load->database('iwide_r1',true);
		$db_read->where (array (
			'inter_id' => $inter_id,
			'status' =>self::STATUS_ON,//有效
			// 'beyond' =>1,//粉丝归属
		) );
		$count = $db_read->from ( self::TAB_IC )->count_all_results ();
		return $count;
	}
}