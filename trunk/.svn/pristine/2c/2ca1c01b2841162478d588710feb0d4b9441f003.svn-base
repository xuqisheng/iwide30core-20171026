<?php
/**
 * 微信基础
 *
 */
class Weixin_model extends CI_Model {
	var $data = array ();
	var $sReqTimeStamp, $sReqNonce, $sEncryptMsg,$token;
	public function __construct() {
		$content = file_get_contents ( 'php://input' );
		if(empty($content)){
			die ( '这是微信请求的接口地址，直接在浏览器里无效' );
		}
		/**
		 * 微信消息加解密说明
		 * @link https://mp.weixin.qq.com/wiki
		 * 针对开放平台和已启用加解密功能的公众号启用
		 * */
		if (isset($_GET ['encrypt_type']) && $_GET ['encrypt_type'] == 'aes') {
			$this->sReqTimeStamp = $this->input->get('timestamp');
			$this->sReqNonce = $this->input->get('nonce');
			$this->sEncryptMsg = $this->input->get('msg_signature');
			$this->load->model('wx/Publics_model');
			$info = array();
			if($this->uri->segment(3)){
				$info = $this->Publics_model->get_public_by_id('a111111111');
			}else{
				$info = $this->Publics_model->get_public_by_id($this->input->get('id'));
				$info['token'] = $this->input->get('id');
			}
			$this->token = $info ['inter_id'];
			$this->load->library('WxApi/wxbizmsgcrypt',array($info ['token'], $info ['aes_key'], $info ['app_id']),'wxcpt');
			$sMsg = ""; // 解析之后的明文
			$errCode = $this->wxcpt->decryptMsg ( $this->sEncryptMsg, $this->sReqTimeStamp, $this->sReqNonce, $content, $sMsg );
			if ($errCode != 0) {
				exit ();
			} else {
				// 解密成功，sMsg即为xml格式的明文
				$content = $sMsg;
			}
		}
		$data = simplexml_load_string($content,"SimpleXMLElement",LIBXML_NOCDATA);
		$card_events = array('card_pass_check','user_get_card','user_del_card','user_consume_card','user_view_card','user_enter_session_from_card');
		
		if($this->input->get('id')=='a439536396' && !in_array($data['event'],$card_events)){//城市名人a439536396
			$this->load->helper('common');
			echo doCurlPostRequest('http://dx.4008266333.net/cch.aspx',$content);
			exit;
		}
		$this->data = json_decode(json_encode($data),TRUE);
	}
	/* 获取微信平台请求的信息 */
	public function getData() {
		return $this->data;
	}
	/* ========================发送被动响应消息 begin================================== */
	public function replyService($to_user_name,$from_user_name,$interid=""){
		/* $handle = @fopen(APPPATH. 'logs/kefu2.log','a');
		if ($handle) {
			fwrite($handle,date('Y-m-d H:i:s')."__".$interid.' - '.file_get_contents("php://input")."\n");
			fclose($handle);
		} */
		
		//d开头的为测试号， a开头的为正式，目前365和远洲 采用自主多客服系统处理数据
		//白云：a450941565
		/*
		if(!empty($interid) && ($interid == "a489736105" || $interid == "d460605501" || $interid == "d460605502" || $interid == "a450941565" || $interid == "a445223616" || $interid == "a440577876" || $interid == "a452233816" || $interid == "a450939254" || $interid == "a450690696" || $interid == "a456989316")){
			$url = "";
			if($interid == "d460605501" || $interid == "d460605502"){
				$url = "http://kefutest.iwide.cn/frontend/web/index.php?r=public/recivemsg";
			}else{
				$url = "http://kefu.iwide.cn/frontend/web/index.php?r=public/recivemsg";
			}
			
			$msg = array();
			$msg['interid'] = $interid;
			$msg['msgxml']	= file_get_contents("php://input");
			$this->http_post($url,$msg);
			echo "";
			exit();
		}else{
			$msg ['ToUserName']   = $to_user_name;
			$msg ['FromUserName'] = $from_user_name;
			$msg ['CreateTime']   = time();
			$msg ['MsgType']      = 'transfer_customer_service';
			$msg ['FuncFlag']      = 0;
			$xml = new \SimpleXMLElement ( '<xml></xml>' );
			$this->_data2xml ( $xml, $msg );
			$str = $xml->asXML ();
			echo $str;
		}
		*/
		
		//$fp = fopen("show_log.txt", "a");
		//@fwrite($fp, $str,strlen($str));
		
		if(!empty($interid)){
			//要求转到他们自己客服
                        $this->load->config('transfer_customer_service.php');
                        $interIds = $this->config->item('inter_id');
			if(in_array($interid, $interIds)){
				$msg ['ToUserName']   = $to_user_name;
				$msg ['FromUserName'] = $from_user_name;
				$msg ['CreateTime']   = time();
				$msg ['MsgType']      = 'transfer_customer_service';
				$msg ['FuncFlag']      = 0;
				$xml = new \SimpleXMLElement ( '<xml></xml>' );
				$this->_data2xml ( $xml, $msg );
				$str = $xml->asXML ();
				echo $str;
				exit();
			}else{
				$url = "";
				if($interid == "d460605501" || $interid == "d460605502"){
					$url = "http://kefutest.iwide.cn/frontend/web/index.php?r=public/recivemsg";
				}else{
					$url = "http://kefu.iwide.cn/frontend/web/index.php?r=public/recivemsg";
				}

				$msg = array();
				$msg['interid'] = $interid;
				$msg['msgxml']	= file_get_contents("php://input");
				//@fwrite($fp, $msg['msgxml'],strlen($msg['msgxml']));
				$this->http_post($url,$msg);
				ob_clean();
				echo "success";
				exit();
			}
			//@fwrite($fp, "finish",strlen("finish"));
		}else{
			ob_clean();
			echo "success";
			exit();
		}
		
	}
	/* 回复文本消息 */
	public function replyText($content) {
		$msg ['Content'] = $content;
		$this->_replyData ( $msg, 'text' );
	}
	/* 回复图片消息 */
	public function replyImage($media_id) {
		$msg ['Image'] ['MediaId'] = $media_id;
		$this->_replyData ( $msg, 'image' );
	}
	/* 回复语音消息 */
	public function replyVoice($media_id) {
		$msg ['Voice'] ['MediaId'] = $media_id;
		$msg ['Voice'] ['MediaId'] = $media_id;
		$this->_replyData ( $msg, 'voice' );
	}
	/* 回复视频消息 */
	public function replyVideo($media_id, $title = '', $description = '') {
		$msg ['Video'] ['MediaId'] = $media_id;
		$msg ['Video'] ['Title'] = $title;
		$msg ['Video'] ['Description'] = $description;
		$this->_replyData ( $msg, 'video' );
	}
	/* 回复音乐消息 */
	public function replyMusic($media_id, $title = '', $description = '', $music_url, $HQ_music_url) {
		$msg ['Music'] ['ThumbMediaId'] = $media_id;
		$msg ['Music'] ['Title'] = $title;
		$msg ['Music'] ['Description'] = $description;
		$msg ['Music'] ['MusicURL'] = $music_url;
		$msg ['Music'] ['HQMusicUrl'] = $HQ_music_url;
		$this->_replyData ( $msg, 'music' );
	}
	/*
	 * 回复图文消息 articles array 格式如下： array( array('Title'=>'','Description'=>'','PicUrl'=>'','Url'=>''), array('Title'=>'','Description'=>'','PicUrl'=>'','Url'=>'') );
	 */
	public function replyNews($articles) {
		$msg ['ArticleCount'] = count ( $articles );
		$msg ['Articles'] = $articles;
		
		$this->_replyData ( $msg, 'news' );
	}
	/* 发送回复消息到微信平台 */
	private function _replyData($msg, $msgType) {
		$msg ['ToUserName'] = $this->data ['FromUserName'];
		$msg ['FromUserName'] = $this->data ['ToUserName'];
		$msg ['CreateTime'] = time();
		$msg ['MsgType'] = $msgType;
		
		$xml = new \SimpleXMLElement ( '<xml></xml>' );
		$this->_data2xml ( $xml, $msg );
		$str = $xml->asXML ();
		
		// 记录日志
		//addWeixinLog ( $str, '_replyData' );
		
		if (isset($_GET ['encrypt_type']) && $_GET ['encrypt_type'] == 'aes') {
			$sEncryptMsg = ""; // xml格式的密文
			$errCode = $this->wxcpt->EncryptMsg ( $str, $this->sReqTimeStamp, $this->sReqNonce, $sEncryptMsg );
			if ($errCode == 0) {
				$str = $sEncryptMsg;
			} else {
				//addWeixinLog ( $str, "EncryptMsg Error: " . $errCode );
			}
		}
		
		echo ($str);
	}

	/* 组装xml数据 */
	public function _data2xml($xml, $data, $item = 'item') {
		foreach ( $data as $key => $value ) {
			is_numeric ( $key ) && ($key = $item);
			if (is_array ( $value ) || is_object ( $value )) {
				$child = $xml->addChild ( $key );
				$this->_data2xml ( $child, $value, $item );
			} else {
				if (is_numeric ( $value )) {
					$child = $xml->addChild ( $key, $value );
				} else {
					$child = $xml->addChild ( $key );
					$node = dom_import_simplexml ( $child );
					$node->appendChild ( $node->ownerDocument->createCDATASection ( $value ) );
				}
			}
		}
	}
	/* ========================发送被动响应消息 end================================== */
	/* 上传多媒体文件 */
	public function uploadFile($file, $type = 'image', $acctoken = '') {
		$post_data ['type'] = $type; // 媒体文件类型，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb）
		$post_data ['media'] = $file;
		
		$url = "http://file.api.weixin.qq.com/cgi-bin/media/upload?access_token=$acctoken&type=image";
		$ch = curl_init ();
		curl_setopt ( $ch, CURLOPT_POST, 1 );
		curl_setopt ( $ch, CURLOPT_URL, $url );
		curl_setopt ( $ch, CURLOPT_POSTFIELDS, $post_data );
		ob_start ();
		curl_exec ( $ch );
		$result = ob_get_contents ();
		ob_end_clean ();
		
		return $result;
	}
	/* 下载多媒体文件 */
	public function downloadFile($media_id, $acctoken = '') {
		// TODO
	}
	/**
	 * GET 请求
	 *
	 * @param string $url        	
	 */
	private function http_get($url) {
		$oCurl = curl_init ();
		if (stripos ( $url, "https://" ) !== FALSE) {
			curl_setopt ( $oCurl, CURLOPT_SSL_VERIFYPEER, FALSE );
			curl_setopt ( $oCurl, CURLOPT_SSL_VERIFYHOST, FALSE );
		}
		curl_setopt ( $oCurl, CURLOPT_URL, $url );
		curl_setopt ( $oCurl, CURLOPT_RETURNTRANSFER, 1 );
		$sContent = curl_exec ( $oCurl );
		$aStatus = curl_getinfo ( $oCurl );
		curl_close ( $oCurl );
		if (intval ( $aStatus ["http_code"] ) == 200) {
			return $sContent;
		} else {
			return false;
		}
	}
	
	/**
	 * POST 请求
	 *
	 * @param string $url        	
	 * @param array $param        	
	 * @return string content
	 */
	private function http_post($url, $param) {
		$oCurl = curl_init ();
		if (stripos ( $url, "https://" ) !== FALSE) {
			curl_setopt ( $oCurl, CURLOPT_SSL_VERIFYPEER, FALSE );
			curl_setopt ( $oCurl, CURLOPT_SSL_VERIFYHOST, false );
		}
		if (is_string ( $param )) {
			$strPOST = $param;
		} else {
			$aPOST = array ();
			foreach ( $param as $key => $val ) {
				$aPOST [] = $key . "=" . urlencode ( $val );
			}
			$strPOST = join ( "&", $aPOST );
		}
		curl_setopt ( $oCurl, CURLOPT_URL, $url );
		curl_setopt ( $oCurl, CURLOPT_RETURNTRANSFER, 1 );
		curl_setopt ( $oCurl, CURLOPT_POST, true );
		curl_setopt ( $oCurl, CURLOPT_POSTFIELDS, $strPOST );
		$sContent = curl_exec ( $oCurl );
		$aStatus = curl_getinfo ( $oCurl );
		curl_close ( $oCurl );
		if (intval ( $aStatus ["http_code"] ) == 200) {
			return $sContent;
		} else {
			return false;
		}
	}
	
	
}
