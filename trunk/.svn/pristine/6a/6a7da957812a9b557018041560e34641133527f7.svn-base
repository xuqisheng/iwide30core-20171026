<?php
namespace App\services\soma\express;

use App\services\Result;
use App\services\soma\contract\ExpressContract;
use App\libraries\Http;
use \App\libraries\Support\Log;
use App\services\soma\ExpressService;
use GuzzleHttp\Middleware;
use Psr\Http\Message\RequestInterface;
use Psr\Http\Message\ResponseInterface;


/**
 * Class ShunFeng
 * @package App\services\express
 * @author renshuai  <renshuai@mofly.cn>
 *
 */
class ShunFeng extends Express implements ExpressContract
{

    /**
     * @var string $appId 顺丰appid
     */
    private $appId;

    /**
     * @var string $appKey 顺丰appKey
     */
    private $appKey;

    /**
     * 初始配置的key
     */
    const CONFIG_KEY = 'shunfeng';

    /**
     * 刷新token调用地址
     */
    const REFRESH_ACCESS_TOKNE_URL = 'https://open-sbox.sf-express.com/public/v1.0/security/refresh_token/access_token/%s/refresh_token/%s/sf_appid/%s/sf_appkey/%s';

    /**
     * 刷新token类型
     */
    const REFRESH_TOKEN_TYPE = 302;

    /**
     * 快速下单的调用地址
     */
    const CREATE_ORDER_URL = "https://open-sbox.sf-express.com/rest/v1.0/order/";
//    const CREATE_ORDER_URL = "https://open-sbox.sf-express.com/rest/v1.0/order/access_token/%s/sf_appid/%s/sf_appkey/%s";

    /**
     * 获取运单类型
     */
    const GET_MAILNO_TYPE = 203;
    /**
     * 获取运单号
     */
    const GET_MAILNO_URL = 'https://open-sbox.sf-express.com/rest/v1.0/order/query/';
//    const GET_MAILNO_URL = 'https://open-sbox.sf-express.com/rest/v1.0/order/query/access_token/%s/sf_appid/%s/sf_appkey/%s';

    /**
     * 快速下单类型
     */
    const CREATE_ORDER_TYPE = 200;

    /**
     * 成功调用接口的代码
     */
    const EX_CODE_OPENAPI_0200 = 'EX_CODE_OPENAPI_0200';

    /**
     * @var ShunFengToken
     */
    public $accessToken;

    /**
     * ShunFeng constructor.
     */
    public function __construct()
    {
        parent::__construct();


        $this->getCI()->config->load('express', true, true);
        $config = $this->getCI()->config->item('express');

        Log::debug('Shun Feng configs', $config)[self::CONFIG_KEY];

        $this->appId = $config[self::CONFIG_KEY]['appID'];
        $this->appKey = $config[self::CONFIG_KEY]['appKey'];

        $this->accessToken = new ShunFengToken($this->appId, $this->appKey);
    }

    /**
     * Register Guzzle middlewares.
     */
    protected function registerHttpMiddlewares()
    {
        parent::registerHttpMiddlewares();

        //retry
        $this->http->addMiddleware($this->retryMiddleware());

        //access_token
        $this->http->addMiddleware($this->accessTokenMiddleware());
    }

    /**
     * Attache access token to request query.
     *
     * @return \Closure
     */
    protected function accessTokenMiddleware()
    {
        return function (callable $handler) {
            return function (RequestInterface $request, array $options) use ($handler) {
                if (!$this->accessToken) {
                    return $handler($request, $options);
                }
                $token = $this->accessToken->getToken();

                $uri = $request->getUri();
                $path = $uri->getPath();
                $path .= 'access_token/' . $token . '/sf_appid/' . $this->appId .  '/sf_appkey/' . $this->appKey;
                $uri = $uri->withPath($path);
                $request = $request->withUri($uri);


                Log::debug("attache access token : {$uri}");
                Log::debug("attache path : {$path}");
                return $handler($request, $options);
            };
        };
    }

    /**
     * Return retry middleware.
     *
     * @return \Closure
     */
    protected function retryMiddleware()
    {
        return Middleware::retry(function (
            $retries,
            RequestInterface $request,
            ResponseInterface $response = null
        ) {
            // Limit the number of retries to 2
            if ($retries <= 2 && $response && $body = $response->getBody()) {
                // Retry on server errors
                $body = $response->getBody();
                if (stripos($body, 'code') && (stripos($body, 'EX_CODE_OPENAPI_0103') || stripos($body, 'EX_CODE_OPENAPI_0105'))) {
                    $token = $this->accessToken->getToken(true);

                    $uri = $request->getUri();
                    $path = $uri->getPath();
                    $path .= 'access_token/' . $token . '/sf_appid/' . $this->appId .  '/sf_appkey/' . $this->appKey;
                    $newUri = $uri->withPath($path);
                    $request->withUri($newUri);

                    Log::debug("Retry with Request Token: {$token}");
                    Log::debug("Retry with Request Uri: {$newUri}");

                    return true;
                }
            }

            return false;
        });
    }

    /**
     * 刷新token
     * @param string $token
     * @author daikanwu <daikanwu@jperation.com>
     * @return string
     */
    public function refreshAccessToken($token)
    {
        $result = new Result();
        try {
            $postData = array(
                "head" => [
                    "transMessageId" => $this->getTranMessageId(),
                    "transType" => self::REFRESH_TOKEN_TYPE
                ],
                "body" => null
            );
            $client = new Http();
            $url = sprintf(self::REFRESH_ACCESS_TOKNE_URL, $token, $token, $this->appId, $this->appKey);
            $response = $client->json($url, $postData);
            $body = $client->parseJSON($response);
            if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
                $token = $body['body']['accessToken'];
                $result->setStatus(Result::STATUS_OK);
                $result->setData($token);
            } else {
                $result->setMessage($body['head']['message']);
            }
        } catch (\Exception $e) {
            $result->setMessage($e->getMessage());
        }

        return $result;

    }

    /**
     * 快速下单
     * @param array $data 上传的数据
     * @return mixed
     * @author daikanwu
     */
//    public function createShippingOrder(Array $data)
//    {
//        $result = new Result();
//        try{
//            $token = $this->getAccessToken()->getData();
//            $client = new Http();
//            $url = sprintf(self::CREATE_ORDER_URL, $token, $this->appId, $this->appKey);
//            $postData = $this->getPostData($data);
//            $response = $client->json($url, $postData);
//            $body = $client->parseJSON($response);

//令牌过期重新刷新token
//if ($body && $body['head']['code'] == 'EX_CODE_OPENAPI_0103' || $body && $body['head']['code'] == 'EX_CODE_OPENAPI_0105') {
//if ($this->refreshAccessToken($token)->getStatus() == Result::STATUS_FAIL) {
//$result->setMessage($this->refreshAccessToken($token)->getMessage());
//} else {
//    $token = $this->refreshAccessToken($token)->getData();
//}
//Log::debug('refresh', $token);
//
////再次下单
//$url = sprintf(self::CREATE_ORDER_URL, $token, $this->appId, $this->appKey);
//$postData = $this->getPostData($data);
//$response = $client->json($url, $postData);
//$body = $client->parseJSON($response);
//}
//            if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
//                $orderId = $body['body']['orderId'];
//                //根据订单号获取运单号
//                if ($this->getMailNum($orderId)->getStatus() == Result::STATUS_FAIL) {
//                    $result->setMessage($this->getMailNum($orderId)->getMessage());
//                } else {

//                        $mailNo = $this->getMailNum($orderId)->getData();
//                        $result->setStatus(Result::STATUS_OK);
//                        $result->setData($mailNo);
//                    }
//            } else {
//                $result->setMessage($body['head']['message']);
//            }
//        } catch(\Exception $e){
//            $result->setMessage($e->getMessage());
//        }
//        return $result;
//    }

    /**
     * 快速下单 顺丰测试环境有问题
     * @param array $data 上传的数据
     * @return mixed|Result
     * @author daikanwu
     */
    public function createShippingOrder(Array $data)
    {
        $result = new Result();
        try{
//            $token = $this->accessToken->getToken(true);
//            $url = sprintf(self::CREATE_ORDER_URL, $token, $this->appId, $this->appKey);

            $postData = $this->getPostData($data);
            if (empty($postData)) {
                $result->setMessage('收件人地址信息不存在');
                return $result;
            }

            $body = $this->parseJSON('json', [self::CREATE_ORDER_URL, $postData]);
            Log::debug('createShippingOrder body', $body->toArray());
            if ($body && $body['head']['code'] == 'EX_CODE_OPENAPI_0500') {
//                $orderId = $body['body']['orderId'];

                //根据订单号获取运单号
                if ($this->getMailNum($data['order_id'])->getStatus() == Result::STATUS_FAIL) {
                    $result->setMessage($this->getMailNum($data['order_id'])->getMessage());
                } else {
                    $mailNo = $this->getMailNum($data['order_id'])->getData();
                    Log::debug('mailno-' . $mailNo);
                    $result->setStatus(Result::STATUS_OK);
                    $result->setData($mailNo);
                }
            } else {
                $result->setMessage($body['head']['message']);
            }
        } catch(\Exception $e){
            $result->setMessage($e->getMessage());
        }
        Log::debug('result', (array)$result);
        return $result;
    }

    /**
     * 获取运单号
     * @param $orderId
     * @return Result
     * @author daikanwu <daikanwu@jperation.com>
     */
    public function getMailNum($orderId)
    {
        $result = new Result();
        try {
//            $token = $this->accessToken->getToken();
//            $url = sprintf(self::GET_MAILNO_URL, $token, $this->appId, $this->appKey);
            $postData = array(
                "head" => [
                    "transMessageId" => $this->getTranMessageId(),
                    "transType" => self::GET_MAILNO_TYPE
                ],
                "body" => array('orderId' => $orderId)
            );

            $body = $this->parseJson('json', [self::GET_MAILNO_URL, $postData]);

            Log::debug('getMailNum body', $body->toArray());
            if ($body && $body['head']['code'] == self::EX_CODE_OPENAPI_0200) {
                $mailNo = $body['body']['mailNo'];
                $result->setStatus(Result::STATUS_OK);
                $result->setData($mailNo);
            } else {
                $result->setMessage($body['head']['message']);
            }
        } catch(\Exception $e) {
            $result->setMessage($e->getMessage());
        }

        return $result;
    }

    /**
     * 组装接口的请求数据
     * @param $data
     * @return array
     * @author daikanwu
     */
//    protected function getPostData($data)
//    {
//        return array(
//            "head" => [
//                "transMessageId" => $this->getTranMessageId(),
//                "transType" => self::CREATE_ORDER_TYPE
//            ],
//            "body" => array(
//                "addedServices" => [
//                    [
//                        "name" => "CUSTID",
//                        "value" => "7550010173"
//                    ]
//                ],
//                "cargoInfo" => [
//                    "cargo" => "iphone5s",
//                    "cargoAmount" => "",
//                    "cargoCount" => "",
//                    "cargoTotalWeight" => "",
//                    "cargoUnit" => "",
//                    "cargoWeight" => "",
//                    "parcelQuantity" => "1"
//                ],
//                "consigneeInfo" => [
//                    "address" => "世界第一广场",
//                    "city" => "深圳",
//                    "company" => "顺丰",
//                    "contact" => "黄飞鸿",
//                    "country" => "",
//                    "mobile" => "18588413321",
//                    "province" => "广东",
//                    "shipperCode" => "518100",
//                    "tel" => "075533915561"
//                ],
//                "custId" => "7550010173",
//                "payArea" => "755CQ",
//                "deliverInfo" => [
//                    "address" => "上地",
//                    "city" => "朝阳",
//                    "company" => "京东",
//                    "contact" => "李卡卡",
//                    "country" => "中国",
//                    "mobile" => "13612822894",
//                    "province" => "北京",
//                    "shipperCode" => "787564",
//                    "tel" => "010-95123669"
//                ],
//                "expressType" => 2,
//                "isDoCall" => 2,
//                "isGenBillNo" => 1,
//                "needReturnTrackingNo" => 1,
//                "orderId" => "955893859438958433234353432",
//                "payMethod" => 3,
//                "remark" => "易碎物品，小心轻放",
//                "sendStartTime" => "2014-08-26 08:31:55"
//            ));
//    }

    /**
     * 组装接口的请求数据，线上的
     * @param $data
     * @return array
     * @author daikanwu
     */
    protected function getPostData($data)
    {
        $region = ExpressService::getInstance()->getRegion($data['openid'], $data['inter_id'], $data['address_id']);
        if (empty($region)) {
            return array();
        }
        return array(
            "head" => [
                "transMessageId" => $this->getTranMessageId(),
                "transType" => self::CREATE_ORDER_TYPE
            ],
            "body" => array(
                "addedServices" => [
                    [
                        "name" => "CUSTID",
                        "value" => "7550010173" // todo 月结卡号
                    ]
                ],
                "cargoInfo" => [
                    "cargo" => $data['name'],
                    "cargoAmount" => "",
                    "cargoCount" => "",
                    "cargoTotalWeight" => "",
                    "cargoUnit" => "",
                    "cargoWeight" => "",
                    "parcelQuantity" => 1
                ],
                "consigneeInfo" => [
                    "address" => $data['address'],
                    "city" => $region[1],
                    "company" => $data['contacts'], //todo
                    "contact" => $data['contacts'],
                    "mobile" => $data['phone'],
                    "province" => $region[0],
                    "shipperCode" => "",
                    "tel" => $data['phone']
                ],
                "custId" => "7550010173", // todo
                "payArea" => "755A", // todo
                "deliverInfo" => [
                    "address" => "",
                    "city" => "",
                    "company" => "",
                    "contact" => "",
                    "country" => "",
                    "mobile" => "",
                    "province" => "",
                    "shipperCode" => "",
                    "tel" => ""
                ],
                "expressType" => 1,
                "isDoCall" => 1,
                "isGenBillNo" => 1,
                "needReturnTrackingNo" => 1,
                "orderId" => $data['order_id'],
                "payMethod" => 3,
                "remark" => isset($data['remark']) ? $data['remark'] : "易碎物品，小心轻放",
                "sendStartTime" => date('Y-m-d H:i:s', time())
            ));
    }

    /**
     * 获取交易流水号
     * @author daikanwu
     */
    protected function getTranMessageId()
    {
        return date('YmdHis', time()).mt_rand(1000, 9999);
    }
}