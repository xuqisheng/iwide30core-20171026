<?php
class Iwidepay_capital_model extends MY_Model
{
    const TAB_IWIDEPAY_ORDER = 'iwide_iwidepay_order';
    const TAB_IWIDEPAY_RULE = 'iwide_iwidepay_rule';
    const TAB_IWIDEPAY_BANK = 'iwide_iwidepay_merchant_info';
    const TAB_IWIDEPAY_TRANSFER = 'iwide_iwidepay_transfer';
    const TAB_IWIDEPAY_SPLIT = 'iwide_iwidepay_split';
    const TAB_IWIDEPAY_SUM = 'iwide_iwidepay_sum_record';
    const TAB_IWIDEPAY_BILL = 'iwide_iwidepay_bill_record';
    const TAB_IWIDEPAY_SETTLE = 'iwide_iwidepay_settlement';
    const TAB_IWIDEPAY_REFUND = 'iwide_iwidepay_refund';
	public function __construct()
    {
		parent::__construct();
	}

    protected function db_read()
    {
        $db_read = $this->load->database('iwide_r1',true);
        return $db_read;
        
    }
    
    protected function db_write(){
        
        return $this->db;
    }

    /**
     * 获取 监管账户余额 订单表 => 分账状态:1待定、2待分 不限制筛选时间
     */
    public function total_amount()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 用户支付金额 订单表 => 分账状态:1待定、2待分 限制筛选时间
     */
    public function pay_amount()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 退款金额 退款表 => 退款状态:1成功，2失败(余额不足),3异常
     */
    public function refund_amount()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 提现金额 分账结算记录表 => 状态 1成功 ，3异常
     */
    public function withdraw_amount()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 金房卡佣金(分账给金房卡且已转账成功的总金额)   分账结算记录表 => 状态 1成功 ，3异常
     */
    public function commission()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 分销佣金(分账给分销员且已转账成功的总金额)  分账结算记录表 => 状态 1成功 ，3异常
     */
    public function distribution()
    {
        $amount = 1;
        return $amount;
    }

    /**
     * 获取 欠款金额 线下订单佣金&奖励、垫付、月费，实时不受筛选时间限制 欠款单记录表 => 结算状态: 0未结清
     */
    public function arrears_amount()
    {
        $amount = 1;
        return $amount;
    }



    /**
     * 创建查询条件sql语句
     * @access 	public
     * @param 	array	$filter 需要操作的数组
     * @return 	string
     */
    public function set_where_sql($filter)
    {
        $where = ' R.refund_status >= 0';
        if(!empty($filter['inter_id']) && $filter['inter_id'] !='ALL_PRIVILEGES')
        {
            $where .= " and  R.inter_id = '{$filter['inter_id']}'";
        }
        if (!empty($filter['hotel_id']))
        {
            $where .= " and R.hotel_id IN ({$filter['hotel_id']})";
        }
        //模块
        if (!empty($filter['module']))
        {
            $where .= " and R.module = '{$filter['module']}'";
        }

        //退款类型
        if (!empty($filter['type']))
        {
            $where .= " and R.type = {$filter['type']}";
        }

        if (!empty($filter['start_time']))
        {
            $where .= " and R.add_time >= '{$filter['start_time']}'";
        }

        if (!empty($filter['end_time']))
        {
            $where .= " and R.add_time <= '{$filter['end_time']} 23:59:59'";
        }

        //单号
        if (!empty($filter['orig_order_no']))
        {
            $where .= " and R.orig_order_no LIKE '%{$filter['orig_order_no']}%'";
        }

        if (isset($filter['refund_status']))
        {
            $where .= " and R.refund_status = {$filter['refund_status']}";
        }


        return $where;
    }

    /**
     * 取得列表限定记录数
     * @access 	public
     * @param   string		$page 当前页数
     * @param   boolean		$page_size	偏移量
     * @return  string		拼装的sql语句
     */
    public function gen_limit($page, $page_size){
        $page = intval($page);
        $page_size = intval($page_size);
        return $page_size > 0 ? (' limit ' . max(0, ($page-1)*$page_size) . ', ' . max(1, $page_size)) : '';
    }


}
